=pod

=head1 NAME

xde-autostart - autostart applications for an XDE session

=head1 SYNOPSIS

B<xde-autostart> [I<OPTIONS>]

=head1 DESCRIPTION

B<xde-autostart> performs the autostart startup functions for a new
session.  Auto-starting of applications is as specified in the L<XDG
Desktop Specification>.

See L</USAGE> section for usage examples.

Note that the functions performed by B<xde-autostart> are integrated
into L<xde-session(1)>, so only use it when you are not using a full
blown XDE session.

=head2 BEHAVIOUR

=head2 PHASES

There are several phases to autostart initialization:

=over

=item I<PreDisplayServer>

Initialization that should be established even before the display
server is provided to the user.  The only functions that use this
autostart phase that I know of is the GNOME keyring subsystems.

=item I<Initialization>

Initialization that does not require the presence of a window manager
and typically does not display X windows.  It is the first phase
executed.

Auto-started applications must be marked as requiring the initialization
stage to be started during this phase (the default is the I<Application>
phase).

=item I<WindowManager>

The window manager itself and any proxies or window manager assisting
applications such as session manager proxies and auto-start monitors.

Specific window managers started during this phase typically are not
specified in XDG F<autostart> files, but rather in F<xsession> files.

=item I<Desktop>

The desktop environment.  This is background setters, icons on the
desktop.  It does not include panels, docks or system trays.  These
auto-started applications normally require the presence of a window
manager before they are launched.

Auto-started applications must be marked as requiring the desktop phase
unless they are known to B<xde-autostart>.  (An example of a known
desktop application is the L<xde-desktop(1)> application.)

=item I<Panel>

The panel, dock or system tray.  This includes any stand-alone panels,
docks, launchers, system trays and status bars.  These auto-started
applications normally require the presence of a window manager and
desktop (or theme setter) before launching.

Auto-started applications must be marked as requiring the panel phase
unless they are known to B<xde-autostart>.

=item I<Application(s)>

Other applications that should be started that may provide a
WindowMaker dock application or system tray icon.  This might also
include regular applications that are to be started at login.  This is
the default phase for auto-started applications that do not specify a
phase in their F<.desktop> file.  These applications typically require
the entire desktop environment (window manager, desktop, panels, docks
and system trays) to be established before they are launched.

=back

=head1 OPTIONS

The program uses L<getopt_long_only(3)> to parse options, so abbreviated
or single-dash long options are recognized when not ambiguous.  The
program accepts the following options:

=head2 COMMAND OPTIONS

The following command options are mutually exclusive: the first option
in this group sets the mode of the program.  When no command option is
specified, the program assumes normal operation.  In normal operation,
the splash screen is displayed and the autostarting of tasks begins.

=over

=item B<--help>, B<-h>

Print usage information to standard error containing current option
settings and exit.

=item B<--version>, B<-V>

Print the program version to standard output and exit.

=item B<--copying>, B<-C>

Print copying permissions to standard output and exit.

=back

=head2 GENERAL OPTIONS

The following general options can be used with most of the command
options listed above:

=over

=item B<--display> I<DISPLAY>

Specifies the display to use.  This is not normally necessary as the
display is obtained from the B<DISPLAY> environment variable when this
option is not specified.

=item B<--desktop>, B<-e> I<DESKTOP>

Specify the desktop environment (DE) to use, I<DESKTOP>, e.g.
C<ADWM>, C<BLACKBOX>, C<ICEWM>, C<FLUXBOX>.  The default value when not
specified is C<XDE>.  The desktop environment must be specified when
B<--autostart> is specified.

In L<lxsession(1)> compatibility mode, this is equivalent to the B<-e>
option to L<lxsession(1)>.  This option may also be specified using the
B<XDG_CURRENT_DESKTOP> or B<FBXDG_DE> environment variables described
below.

=item B<--session>, B<-s> I<SESSION>

Invokes B<lxsession(1)> compatibility mode, and specifies the session
profile to use for emulating the autostart portion of L<lxsession(1)>.
This is equivalent to the B<-s> option to L<lxsession(1)>.  This option
may also be specified using the B<DESKTOP_SESSION> environment variable
as described below.

=item B<--file>, B<-f> I<FILE>

Execute the commands contained in the file, I<FILE>, after a window
manager appears, but before executing any other commands or auto-starting
tasks.  The file is compatible with the L<lxsession(1)> F<autostart>
file.  Each line of the file contains a shell command to execute,
optionally prefixed with a C<@> to indicate that the process should be
restarted when it exits abnormally.  Tasks executed from this file will
be started before any specified by the B<-x> option, or auto-started from
XDG autostart desktop files.

In L<lxsession(1)> compatibility mode, this option will default to the
F<autostart> file in the F<SESSION> subdirectory under
F<$XDG_CONFIG_HOME/lxsession>, where I<SESSION> is specified with the
B<-s> option.

=item B<--exec>, B<-x> I<COMMAND>

Execute the command string, I<COMMAND>, to start applications after the
window manager, and before autostart tasks are executed.  This option
defaults to none.  The option may be repeated to execute a number of
commands in the order specified.  It is possible to prefix the
I<COMMAND> string with a single C<@> that will indicate that the task
should be restarted when it exits abnormally.

=item B<--autostart>, B<--noautostart>, B<-a>

Specifies whether (or not) to autostart XDG applications in accordance
with the L<Desktop Application Autostart Specification>.  The inverted
sense of the B<-a> flag is for compatibility with L<lxsession(1)>.

=item B<--wait>, B<-w>, B<--nowait>

Specifies whether (or not) to wait for a window manager to take control
of the root window of the default screen of the display before starting
further applications.

=item B<--pause>, B<-p> [I<PAUSE>]

Specifies the interval of time, I<PAUSE>, in seconds to wait after the
window manager initialization phase before starting the first
applications.  If I<PAUSE> is not specified, it defaults to 2 seconds.
The default when the option is not specified is not to pause at all.
The pause can be explicitly disabled by using a I<PAUSE> value of zero
(0).

=item B<--splash>, B<-l> [I<IMAGE>], B<--nosplash>

Specifies that a splash window is to be generated and optionally
populated with an image from the file, I<IMAGE>, (that can be in XPM or
PNG format).  The splash window will display the icons of the XDG
compliant F<*.desktop> files as they are started.  The I<IMAGE> is for
optional branding.

=item B<--toolwait>, B<W> [I<GUARD>][:I<DELAY>]

When auto-starting tasks for which startup notification completion can be
determined, serialize the startup in a similar fashion to
L<xtoolwait(1)>, where the next autostart task is not launched until the
previous task is complete, or the guard timeout period, I<GUARD>, in
milliseconds, expires.  Where startup notification completion cannot be
determined (such as for command executed from the B<--file> or B<--exec>
options), the program will wait I<DELAY> milliseconds before starting the
next task.  I<GUARD> defaults to 200 milliseconds.  I<DELAY> defaults to
zero (0) milliseconds.  The default is to perform tool wait.  To disable
tool wait, specify C<--toolwait 0:0>.

=item B<--charset>, B<-c> I<CHARSET>

Specify the character set with which to output the XDG desktop file
derived information.  Defaults to the character set (LC_CHARSET) in use
by the current locale.  Because the program is intended on running after
login, use of this option is seldom necessary.

=item B<--language>, B<-L> I<LANGUAGE>

Specify the output language for XDG desktop file derived information.
Defaults to the language (LC_MESSAGES) of the current locale.  Because
the program is intended on running after login, use of this option is
seldom necessary.

=item B<--banner>, B<-b> I<BANNER>

Specifies a custom splash login logo.  When unspecified, the program
will use a branded logo that depends on environment variables.  This
option is compatible with other tools and is an alternate way of
specifying the I<IMAGE> argument to the B<--splash> option.

=item B<--side>, B<-S> {B<left>|B<top>|B<right>|B<bottom>}

Specifies the side of the window on which the logo will be placed.  This
options is recognized for compatibility with other tools.
B<xde-autostart> always places the logo on the left and this option is
ignored.

=item B<--icons>, B<-i> I<THEME>

Specifies the icon theme to use.  Otherwise, the user's default GTK+
icon theme will be used (i.e. from F<$HOME/.gtkrc-2.0>; but note the
B<--xde-theme> option as well.

=item B<--theme>, B<-t> I<THEME>

Specifes the GTK+ theme to use.  Otherwise, the user's default GTK+
theme will be used (i.e. from F<$HOME/.gtkrc-2.0>); but note the
B<--xde-theme> option as well.

=item B<--xde-theme>, B<-X>

Use the current XDE desktop theme for the splash window instead of the
specified or default GTK+ theme.

=item B<--foreground>, B<-F>

The default is for the program to daemonize itself and continue
monitoring auto-started tasks in the background.  This option causes the
program to run in the foreground and prints debugging information to
standard error.  Implies a debug level of 2.

=item B<--dry-run>, B<-n>

Do not do anything (do not execute or write out files), just print to
standard error what would be done.  Implies a debug level of 2.  Useful
with B<--foreground>.

=item B<--debug>, B<-d> [I<LEVEL>]

Increment or set the debug level to I<LEVEL>.  The default debugging
level is 0 (meaning no debugging).  When set, the program will print
debugging information to standard error during operation.

(Note that because this option takes an optional argument, C<--> must be
specified before any non-option argument.)

=item B<--verbose>, B<-v> [I<LEVEL>]

Increment or set the output verbosity level to I<LEVEL>.  THe default
output verbosity level is 1.

(Note that because this option takes an optional argument, C<--> must be
specified before any non-option argument.)

=back

=head2 SESSION MANAGEMENT OPTIONS

=over

=item B<--client-id> I<CLIENTID>

Tells the program to restore X Session Management settings saved using
the client identifier, I<CLIENTID>.  This is an internal option used for
communicating with an X Session Manager and should not be specified on
the command line.  See L</USAGE>, below.

=item B<--save-file> I<FILENAME>

Tells the program that persistent information was saved in the file with
path I<FILENAME>.  This is an internal option used for communicating
with an X Session Manager and should not be specified on the command
line.  See L</USAGE>, below.

=back

=head1 USAGE

B<xde-autostart> is intended on being launched by L<xde-session(1)>.
See the L<xde-session(1)> manual page for details of its operation.

When launched directly, 

=head1 FILES

In general, auto-started F<.desktop> entries are launched using the
external L<xdg-launch(1)> application (by specifying the F<.desktop>
file to launch).  B<xde-autostart> establishes the application name for
launch as well as determining the order and conditions under which to
launch a particular entry.  Because of this, B<xde-autostart> only
directly considers a small subset of the B<.desktop> key fields and
relies on L<xdg-launch(1)> to process the remainder of the fields.

The following F<.desktop> file entries are considered by
B<xde-autostart>:

=over

=item B<X-GNOME-Autostart-Phase>={I<Initialization>|I<WindowManager>|I<Desktop>|I<Panel>|I<Application>}

This is a GNOME-specific key field that specifies the phase.

Unfortunately, some poorly formatted F<.desktop> files specify the
value of C<Applications> for this field instead of C<Application>; so,
B<xde-autostart> treats unknown values for this field as the default
(which, I<is> C<Application>).

=item B<AutostartPhase>={I<Initialization>|I<WindowManager>|I<Desktop>|I<Panel>|I<Application>}

This is a more general form of the B<X-GNOME-Autostart-PHase> key that
is not specific to the GNOME desktop environment.  It takes the same
values as B<X-GNOME-Autostart-PHase>, and provides the same behaviour.

=back

In general, B<xde-autostart> uses the F<.desktop> file key fields above
to determine the order in which to invoke the separate F<.desktop> file
auto-start entries.  L<xdg-launch(1)> uses a much wider range of
F<.desktop> file key fields to launch the auto-started application as
well as performing startup notification for the launched applications. 

=head1 ENVIRONMENT

The following environment variables (in alphabetical order) are examined
or set by B<xde-autostart>:

=over

=item B<DESKTOP_SESSION>

To emulate L<lxsession(1)>, the C<DESKTOP_SESSION> environment variable
is set to the value that resulted from option and environment variable
processing for children of the session.

=item B<DESKTOP_STARTUP_ID>

B<xde-autostart> is a GTK program and has been configured to automatically
perform startup notification completion on startup (not that anyone is
listening at this point).

=item B<DISPLAY>

Used to determine X Display.  When the B<--display> option is specified,
this environment variable will be set to the specified value.

=item B<FBXDG_DE>

To emulate L<fbautostart>, the C<FBXDG_DE> environment variable is
examined when the C<--desktop> option is not specified and the
C<XDG_CURRENT_DESKTOP> environment variable is not set.  C<FBXDG_DE> is
set to the value that resulted from option and environment variable
processing for children of the session.

=item B<HOME>

Will be used to determine the user's home directory for the purpose of
calculating the default value for C<XDG_CONFIG_HOME> and
C<XDG_DATA_HOME> when required.  When unspecified, the home directory
for the current local user is determined from the password file.
Failing that, the current directory is used.

=item B<HOSTNAME>

Will be used to determine the local host name.  When unspecified, the
name will be determined from the L<gethostname(3)> call.  This value is
used to determine the host for which to save session files.  Also, will
be used to determine the default directory for some configuration and
commands.

=item B<LANG>

Used to set the current locale.

=item B<_LXSESSION_PID>

To emulate L<lxsession(1)>, the C<_LXSESSION_PID> environment variable
is set to the PID of B<xde-session>, the process group leader responsible
for launching all tasks under the X session manager.  The X session can
be terminated by killing this process.

=item B<USER>

Will be used to determine the name of the local user.  When unspecified,
the user name for the current pid will be determined from the password
file and this environment variable will be set.  Failing that it will
not be set.

=item B<XDG_CONFIG_DIRS>

=item B<XDG_CONFIG_HOME>

Specifies the user XDG configuration directory.  When unspecified,
defaults to F<$HOME/.config> in accordance with XDG specifications.
B<xde-autostart> uses this directory to determine the list of default
configuration directories to search.  The subdirectory
F<$XDG_CONFIG_HOME/autostart> will be examined for F<*.desktop> files.

=item B<XDG_CURRENT_DESKTOP>

When the C<--desktop> option is not specified, C<XDG_CURRENT_DESKTOP> is
examined to determine the current desktop.  C<XDG_CURRENT DESKTOP> is
set to the value that resulted from option and environment variable
processing for children of the session.

=item B<XDG_DATA_DIRS>

=item B<XDG_DATA_HOME>

Specifies the user XDG data directory.  When unspecified, defaults to
F<$HOME/.local/share> in accordance with XDG specifications.
B<xde-autostart> uses this directory to determine the list of default data
directories to search.  The subdirectory F<$XDG_DATA_HOME/xsessions>
will be examined for F<*.desktop> files.

=item B<XDG_MENU_PREFIX>

This variable has no default.  If the variable is not set when the
B<xde-session> program is executed, it sets it to the specified or
default B<--vendor> option followed by a dash (C<->).  This variable
determines which files are used to construct XDG menus.

When the B<--wmname> option is specified and the B<--desktop> option is
not specified, C<$XDG_CURRENT_DESKTOP> is set to the window manager name
folded to all uppercase.

=item B<XDG_SESSION_PID>

C<XDG_SESSION_PID> is set to the PID of B<xde-session>, the process group
leader responsible for launching all tasks under the X session manager.
The X session can be terminated by killing this process.  See also
L</SIGNALS>, below.

=item B<XDG_VENDOR_ID>

This environment variable is examined to determine the default for the
B<--vendor> option.  When the B<--vendor> option is specified or
defaults, this environment variable is set to the value that results
from option and environment variable processing.  This is a convenience
for when the B<--vendor> option cannot be derived from the
C<XDG_MENU_PREFIX> environment variable.  It is not an XDG standard
environment variable.

=back

=head1 HISTORY

I wrote B<xde-autostart> dues to the deficiencies of L<fbautostart(1)>
and L<lxsession(1)> when launching XDG-compliant applications and
desktop environments over NetWM/EWMH compliant light-weight window
managers.  Most of these tools perform autostart I<before> the window
manager is started, which can confuse the window manager.
B<xde-autostart> auto-starts applications I<after> the window manager
has appeared while auto-starting entries marked with the
I<Initialization> phase before the window manager.

B<xde-autostart> was originally written using L<perl-gtk>, and was
part of the L<perl> program B<xde-session>, but was rewritten as a
C<C>-language program.

=head1 AUTHOR

Brian Bidulock L<mailto:bidulock@openss7.org>.

See B<--copying> for full copyright notice and copying permissions.

=head1 SEE ALSO

L<getopt_long_only(3)>, L<xde-logout(1)>, L<xde-session(1)>,
L<xde-startup(1)>, L<xdg-launch(1)>, L<lxsession-logout(1)>,
L<lxsession(1)>.

=head1 LICENSE

See the F<COPYING> file in the distribution or use the B<--copying> flag
to display copying permissions.

=cut

# vim: set sw=4 tw=72 nocin spell spelllang=en_ca:
